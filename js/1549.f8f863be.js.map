{"version":3,"file":"js/1549.f8f863be.js","mappings":"4IAkBA,OAAeA,EAAAA,EAAAA,SAA+BC,OAAO,CACnDC,KAAM,WAENC,MAAO,CACLC,MAAOC,SAGTC,KAAM,KAAM,CACVC,UAAU,IAGZC,SAAU,CACRC,aACE,OAAOC,KAAKH,UAAYG,KAAKN,OAASM,KAAKC,WAI/CC,MAAO,CACLD,WACED,KAAKH,UAAW,IAIpBM,UAEM,SAAUH,KAAKI,SACjBC,EAAAA,EAAAA,IAAQ,OAAQL,OAIpBM,QAAS,CACPC,gBAAiBC,GACf,OAAQR,KAAKD,YAAcS,EAAWA,IAAY,CAACR,KAAKS","sources":["webpack://ict.itmo/../../../src/mixins/bootable/index.ts"],"sourcesContent":["// Utilities\nimport { removed } from '../../util/console'\n\n// Types\nimport Vue, { VNode } from 'vue'\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\n/**\n * Bootable\n * @mixin\n *\n * Used to add lazy content functionality to components\n * Looks for change in \"isActive\" to automatically boot\n * Otherwise can be set manually\n */\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable>().extend({\n  name: 'bootable',\n\n  props: {\n    eager: Boolean,\n  },\n\n  data: () => ({\n    isBooted: false,\n  }),\n\n  computed: {\n    hasContent (): boolean | undefined {\n      return this.isBooted || this.eager || this.isActive\n    },\n  },\n\n  watch: {\n    isActive () {\n      this.isBooted = true\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if ('lazy' in this.$attrs) {\n      removed('lazy', this)\n    }\n  },\n\n  methods: {\n    showLazyContent (content?: () => VNode[]): VNode[] {\n      return (this.hasContent && content) ? content() : [this.$createElement()]\n    },\n  },\n})\n"],"names":["Vue","extend","name","props","eager","Boolean","data","isBooted","computed","hasContent","this","isActive","watch","created","$attrs","removed","methods","showLazyContent","content","$createElement"],"sourceRoot":""}